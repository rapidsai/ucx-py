name: build

on:
  push:
    branches:
      - "branch-*"
    tags:
      - v[0-9].[0-9][0-9].[0-9][0-9]
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: string
      date:
        required: true
        type: string
      sha:
        required: true
        type: string
      build_type:
        type: string
        default: nightly

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  conda-python-build:
    secrets: inherit
    uses: rapidsai/shared-action-workflows/.github/workflows/conda-python-build.yaml@branch-23.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
  upload-conda:
    needs: [conda-python-build]
    secrets: inherit
    uses: rapidsai/shared-action-workflows/.github/workflows/conda-upload-packages.yaml@branch-23.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
  wheel-build:
    secrets: inherit
    uses: rapidsai/shared-action-workflows/.github/workflows/wheels-manylinux-build.yml@branch-23.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      package-name: ucx_py
      package-dir: .
      # copy custom auditwheel script to known location with '{package}' placeholder
      # in the auditwheel repair command, the '{package}' placeholder can't be used
      cibw-before-build: 'cp {package}/.github/build-scripts/patch-wheel.sh /patch-wheel.sh'
      post-repair-amd64: "/patch-wheel.sh {dest_dir}/*.whl"
      post-repair-arm64: "/patch-wheel.sh {dest_dir}/*.whl"
  wheel-publish:
    needs: wheel-build
    secrets: inherit
    uses: rapidsai/shared-action-workflows/.github/workflows/wheels-manylinux-publish.yml@branch-23.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      package-name: ucx_py

name: ucx-py wheels

on:
  push:
    branches:
      - 'pull-request/[0-9]+'
  workflow_call:
    inputs:
      versioneer-override:
        type: string
        default: ''
      build-tag:
        type: string
        default: ''
      branch:
        required: true
        type: string
      date:
        required: true
        type: string
      sha:
        required: true
        type: string
      build-type:
        type: string
        default: nightly

concurrency:
  group: "ucx-py-${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  ucx-py-wheels:
    uses: rapidsai/shared-action-workflows/.github/workflows/wheels-manylinux.yml@main
    with:
      repo: rapidsai/ucx-py

      build-type: ${{ inputs.build-type || 'pull-request' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}

      package-dir: .
      package-name: ucx_py

      python-package-versioneer-override: ${{ inputs.versioneer-override }}
      python-package-build-tag: ${{ inputs.build-tag }}

      # copy custom auditwheel script to known location with '{package}' placeholder
      # in the auditwheel repair command, the '{package}' placeholder can't be used
      cibw-before-build: "cp {package}/.github/build-scripts/patch-wheel.sh /patch-wheel.sh"

      auditwheel-repair-command-amd64: "auditwheel --verbose repair -w {dest_dir} --plat manylinux_2_17_x86_64 {wheel} && /patch-wheel.sh {dest_dir}/*.whl"
      auditwheel-repair-command-arm64: "auditwheel --verbose repair -w {dest_dir} --plat manylinux_2_31_aarch64 {wheel} && /patch-wheel.sh {dest_dir}/*.whl"

      test-docker-options: "--cap-add CAP_SYS_PTRACE --shm-size=8g"

      test-before-arm64: "pip install cupy-cuda11x -f https://pip.cupy.dev/aarch64"
      test-extras: test
      test-unittest: "pytest -k 'not test_send_recv_am' --cache-clear -vs ./ucp/_libs/tests/ && pytest --cache-clear -vs ./tests"
    secrets: inherit
